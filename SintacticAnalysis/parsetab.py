
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'A AA AF ALEATORIO COMA CUANDO DAA DAB DCL DEC DEFAULT DESDE DFA DFB DIFERENTE DOSPUNTOS ENCASO ENTONS F FIN FINDESDE FINENCASO FINPROC HAGA HASTA HASTAENCONTRAR IAA IAB ID IFA IFB IGUAL INC INI INICIO INICIOPROC LLAMAR LLAVE_DER LLAVE_IZQ MAYOR MAYORIGUAL MENOR MENORIGUAL MOVER NUMERO PARENTESIS_DER PARENTESIS_IZQ PROC PUNTOCOMA REPITA SINO SUMA\n    Start : code\n    \n    code : INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento\n    \n    cuerpo : variable\n            | expresion\n    \n    variable : variable1 cuerpo\n            | variable2 cuerpo\n            | empty empty\n    \n    variable1 : DCL ID PUNTOCOMA\n    \n    variable2 : DCL ID DEFAULT NUMERO PUNTOCOMA\n    \n    expresion : empty\n        \n    expresion : condicion1 expresion\n            | condicion2 expresion\n            | repita expresion\n            | hacer expresion\n            | funcion expresion\n            | llamarProc expresion\n\n    \n    condicion1 : ENCASO cond1Aux1 FINENCASO PUNTOCOMA\n    \n    cond1Aux1 : cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER\n            | empty empty empty empty empty\n    \n    cond1Aux2 : empty\n        \n    cond1Aux2 : CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2\n\n    \n    condicion2 : ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA\n    \n    cond2Aux1 : cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER\n                | empty empty empty empty empty\n    \n        cond2Aux2 : CUANDO  condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2\n                | empty empty empty empty empty empty empty empty\n        \n    condicion : IGUAL\n              | MAYOR\n              | MENOR\n              | DIFERENTE\n              | MAYORIGUAL\n              | MENORIGUAL\n    \n    sentencia : ID\n               | NUMERO\n    \n     repita : REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA\n    \n    hacer : DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA\n    \n    funcion : Aleatorio\n            | Mover\n            | funcionAlge\n    \n    Aleatorio : ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA\n    \n    Mover : MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA\n    \n    paramMover : AF\n                | F\n                | DFA\n                | IFA\n                | DFB\n                | IFB\n                | A\n                | DAA\n                | IAA\n                | DAB\n                | IAB\n                | AA\n    \n    funcionAlge : INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA\n             | DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA\n             | INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA\n    \n        procedimiento : PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento\n                     | empty empty empty empty empty empty empty empty empty empty empty\n    \n    parametro : ID COMA parametro\n              | ID empty empty\n              | NUMERO COMA parametro\n              | NUMERO empty empty\n              | empty empty empty\n    \n    llamarProc : LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA\n    \n    empty :\n    '
    
_lr_action_items = {'INICIO':([0,],[3,]),'$end':([1,2,55,86,88,118,140,159,170,177,184,192,196,199,200,202,203,],[0,-1,-65,-2,-65,-65,-65,-65,-65,-65,-65,-65,-65,-65,-65,-57,-58,]),'DOSPUNTOS':([3,176,],[4,183,]),'DCL':([4,8,9,56,119,],[17,17,17,-8,-9,]),'FIN':([4,5,6,7,8,9,10,11,12,13,14,15,16,21,22,23,31,32,33,34,35,36,37,38,39,40,56,90,112,119,120,135,151,166,167,168,181,198,],[-65,30,-3,-4,-65,-65,-10,-65,-65,-65,-65,-65,-65,-37,-38,-39,-5,-6,-7,-11,-10,-12,-13,-14,-15,-16,-8,-17,-40,-9,-22,-41,-64,-54,-55,-56,-35,-36,]),'ENCASO':([4,8,9,11,12,13,14,15,16,21,22,23,47,56,90,101,112,119,120,121,135,151,162,163,166,167,168,175,181,183,198,],[18,18,18,18,18,18,18,18,18,-37,-38,-39,18,-8,-17,18,-40,-9,-22,18,-41,-64,18,18,-54,-55,-56,18,-35,18,-36,]),'REPITA':([4,8,9,11,12,13,14,15,16,21,22,23,47,56,90,101,112,119,120,121,135,151,162,163,166,167,168,175,181,183,198,],[19,19,19,19,19,19,19,19,19,-37,-38,-39,19,-8,-17,19,-40,-9,-22,19,-41,-64,19,19,-54,-55,-56,19,-35,19,-36,]),'DESDE':([4,8,9,11,12,13,14,15,16,21,22,23,47,56,90,101,112,119,120,121,135,151,162,163,166,167,168,175,181,183,198,],[20,20,20,20,20,20,20,20,20,-37,-38,-39,20,-8,-17,20,-40,-9,-22,20,-41,-64,20,20,-54,-55,-56,20,-35,20,-36,]),'LLAMAR':([4,8,9,11,12,13,14,15,16,21,22,23,47,56,90,101,112,119,120,121,135,151,162,163,166,167,168,175,181,183,198,],[24,24,24,24,24,24,24,24,24,-37,-38,-39,24,-8,-17,24,-40,-9,-22,24,-41,-64,24,24,-54,-55,-56,24,-35,24,-36,]),'ALEATORIO':([4,8,9,11,12,13,14,15,16,21,22,23,47,56,90,101,112,119,120,121,135,151,162,163,166,167,168,175,181,183,198,],[25,25,25,25,25,25,25,25,25,-37,-38,-39,25,-8,-17,25,-40,-9,-22,25,-41,-64,25,25,-54,-55,-56,25,-35,25,-36,]),'MOVER':([4,8,9,11,12,13,14,15,16,21,22,23,47,56,90,101,112,119,120,121,135,151,162,163,166,167,168,175,181,183,198,],[26,26,26,26,26,26,26,26,26,-37,-38,-39,26,-8,-17,26,-40,-9,-22,26,-41,-64,26,26,-54,-55,-56,26,-35,26,-36,]),'INC':([4,8,9,11,12,13,14,15,16,21,22,23,47,56,90,101,112,119,120,121,135,151,162,163,166,167,168,175,181,183,198,],[27,27,27,27,27,27,27,27,27,-37,-38,-39,27,-8,-17,27,-40,-9,-22,27,-41,-64,27,27,-54,-55,-56,27,-35,27,-36,]),'DEC':([4,8,9,11,12,13,14,15,16,21,22,23,47,56,90,101,112,119,120,121,135,151,162,163,166,167,168,175,181,183,198,],[28,28,28,28,28,28,28,28,28,-37,-38,-39,28,-8,-17,28,-40,-9,-22,28,-41,-64,28,28,-54,-55,-56,28,-35,28,-36,]),'INI':([4,8,9,11,12,13,14,15,16,21,22,23,47,56,90,101,112,119,120,121,135,151,162,163,166,167,168,175,181,183,198,],[29,29,29,29,29,29,29,29,29,-37,-38,-39,29,-8,-17,29,-40,-9,-22,29,-41,-64,29,29,-54,-55,-56,29,-35,29,-36,]),'LLAVE_DER':([11,12,13,14,15,16,21,22,23,34,35,36,37,38,39,40,47,66,90,101,112,120,121,124,135,141,151,162,163,166,167,168,172,173,175,181,182,198,],[-65,-65,-65,-65,-65,-65,-37,-38,-39,-11,-10,-12,-13,-14,-15,-16,-65,104,-17,-65,-40,-22,-65,144,-41,160,-64,-65,-65,-54,-55,-56,179,180,-65,-35,190,-36,]),'FINPROC':([11,12,13,14,15,16,21,22,23,34,35,36,37,38,39,40,90,112,120,135,151,166,167,168,181,183,191,198,],[-65,-65,-65,-65,-65,-65,-37,-38,-39,-11,-10,-12,-13,-14,-15,-16,-17,-40,-22,-41,-64,-54,-55,-56,-35,-65,195,-36,]),'ID':([17,18,20,24,46,52,53,54,67,68,87,94,95,96,97,98,99,100,103,114,115,116,127,128,129,133,139,164,],[41,43,48,49,65,83,84,85,105,108,117,105,-27,-28,-29,-30,-31,-32,105,105,105,105,147,105,108,108,108,105,]),'CUANDO':([18,43,179,180,],[46,62,62,46,]),'FINENCASO':([18,42,43,45,59,61,64,93,102,122,125,142,144,145,160,161,],[-65,58,-65,-65,91,-65,-65,-65,-65,-65,-65,-65,-18,-19,-23,-24,]),'SINO':([18,43,44,45,60,61,93,122,142,161,171,178,179,180,185,186,187,188,189,193,197,201,204,],[-65,-65,63,-20,92,-65,-65,-65,-65,-65,-65,-65,-65,-65,-26,-25,-65,-21,-20,-65,-65,-65,-65,]),'LLAVE_IZQ':([19,63,92,143,146,165,],[47,101,121,162,163,175,]),'PARENTESIS_IZQ':([25,26,27,28,29,49,117,],[50,51,52,53,54,68,139,]),'PUNTOCOMA':([30,41,58,69,89,91,105,107,113,131,155,156,157,174,194,195,],[55,56,90,112,119,120,-33,-34,135,151,166,167,168,181,198,199,]),'DEFAULT':([41,],[57,]),'IGUAL':([48,62,65,147,],[67,95,95,95,]),'PARENTESIS_DER':([50,68,70,71,72,73,74,75,76,77,78,79,80,81,82,105,107,108,109,110,111,129,130,132,133,134,136,137,138,139,149,150,152,153,154,158,],[69,-65,113,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-33,-34,-65,131,-65,-65,-65,-65,-65,-65,-65,155,156,157,-65,-59,-60,-63,-61,-62,169,]),'AF':([51,],[71,]),'F':([51,],[72,]),'DFA':([51,],[73,]),'IFA':([51,],[74,]),'DFB':([51,],[75,]),'IFB':([51,],[76,]),'A':([51,],[77,]),'DAA':([51,],[78,]),'IAA':([51,],[79,]),'DAB':([51,],[80,]),'IAB':([51,],[81,]),'AA':([51,],[82,]),'PROC':([55,199,],[87,87,]),'NUMERO':([57,67,68,94,95,96,97,98,99,100,103,114,115,116,128,129,133,139,164,],[89,107,111,107,-27,-28,-29,-30,-31,-32,107,107,107,107,107,111,111,111,107,]),'MAYOR':([62,65,147,],[96,96,96,]),'MENOR':([62,65,147,],[97,97,97,]),'DIFERENTE':([62,65,147,],[98,98,98,]),'MAYORIGUAL':([62,65,147,],[99,99,99,]),'MENORIGUAL':([62,65,147,],[100,100,100,]),'COMA':([83,84,85,108,111,],[114,115,116,129,133,]),'HASTAENCONTRAR':([104,],[127,]),'HASTA':([105,106,107,],[-33,128,-34,]),'ENTONS':([105,107,123,126,],[-33,-34,143,146,]),'HAGA':([105,107,148,],[-33,-34,165,]),'INICIOPROC':([169,],[176,]),'FINDESDE':([190,],[194,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Start':([0,],[1,]),'code':([0,],[2,]),'cuerpo':([4,8,9,],[5,31,32,]),'variable':([4,8,9,],[6,6,6,]),'expresion':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[7,7,7,34,36,37,38,39,40,66,124,141,172,173,182,191,]),'variable1':([4,8,9,],[8,8,8,]),'variable2':([4,8,9,],[9,9,9,]),'empty':([4,8,9,10,11,12,13,14,15,16,18,43,45,47,55,61,64,68,88,93,101,102,108,110,111,118,121,122,125,129,130,132,133,134,139,140,142,159,161,162,163,170,171,175,177,178,179,180,183,184,187,192,193,196,197,199,200,201,204,],[10,10,10,33,35,35,35,35,35,35,45,61,64,35,88,93,102,110,118,122,35,125,130,132,134,140,35,142,145,110,150,152,110,154,110,159,161,170,171,35,35,177,178,35,184,185,187,189,35,192,193,196,197,200,201,88,203,204,171,]),'condicion1':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'condicion2':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'repita':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'hacer':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'funcion':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'llamarProc':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'Aleatorio':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'Mover':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'funcionAlge':([4,8,9,11,12,13,14,15,16,47,101,121,162,163,175,183,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'cond1Aux1':([18,],[42,]),'cond1Aux2':([18,180,],[44,188,]),'cond2Aux1':([43,],[59,]),'cond2Aux2':([43,179,],[60,186,]),'paramMover':([51,],[70,]),'procedimiento':([55,199,],[86,202,]),'condicion':([62,65,147,],[94,103,164,]),'sentencia':([67,94,103,114,115,116,128,164,],[106,123,126,136,137,138,148,174,]),'parametro':([68,129,133,139,],[109,149,153,158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Start","S'",1,None,None,None),
  ('Start -> code','Start',1,'p_Start','SintacticAnalizer.py',14),
  ('code -> INICIO DOSPUNTOS cuerpo FIN PUNTOCOMA procedimiento','code',6,'p_Code','SintacticAnalizer.py',21),
  ('cuerpo -> variable','cuerpo',1,'p_cuerpo','SintacticAnalizer.py',28),
  ('cuerpo -> expresion','cuerpo',1,'p_cuerpo','SintacticAnalizer.py',29),
  ('variable -> variable1 cuerpo','variable',2,'p_Variable','SintacticAnalizer.py',36),
  ('variable -> variable2 cuerpo','variable',2,'p_Variable','SintacticAnalizer.py',37),
  ('variable -> empty empty','variable',2,'p_Variable','SintacticAnalizer.py',38),
  ('variable1 -> DCL ID PUNTOCOMA','variable1',3,'p_Variable1','SintacticAnalizer.py',48),
  ('variable2 -> DCL ID DEFAULT NUMERO PUNTOCOMA','variable2',5,'p_Variable2','SintacticAnalizer.py',57),
  ('expresion -> empty','expresion',1,'p_expresion_empty','SintacticAnalizer.py',66),
  ('expresion -> condicion1 expresion','expresion',2,'p_expresion','SintacticAnalizer.py',72),
  ('expresion -> condicion2 expresion','expresion',2,'p_expresion','SintacticAnalizer.py',73),
  ('expresion -> repita expresion','expresion',2,'p_expresion','SintacticAnalizer.py',74),
  ('expresion -> hacer expresion','expresion',2,'p_expresion','SintacticAnalizer.py',75),
  ('expresion -> funcion expresion','expresion',2,'p_expresion','SintacticAnalizer.py',76),
  ('expresion -> llamarProc expresion','expresion',2,'p_expresion','SintacticAnalizer.py',77),
  ('condicion1 -> ENCASO cond1Aux1 FINENCASO PUNTOCOMA','condicion1',4,'p_condicion1','SintacticAnalizer.py',88),
  ('cond1Aux1 -> cond1Aux2 SINO LLAVE_IZQ expresion LLAVE_DER','cond1Aux1',5,'p_cond1Aux1','SintacticAnalizer.py',95),
  ('cond1Aux1 -> empty empty empty empty empty','cond1Aux1',5,'p_cond1Aux1','SintacticAnalizer.py',96),
  ('cond1Aux2 -> empty','cond1Aux2',1,'p_cond1Aux2_empty','SintacticAnalizer.py',107),
  ('cond1Aux2 -> CUANDO ID condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond1Aux2','cond1Aux2',9,'p_cond1Aux2','SintacticAnalizer.py',113),
  ('condicion2 -> ENCASO ID cond2Aux1 FINENCASO PUNTOCOMA','condicion2',5,'p_condicion2','SintacticAnalizer.py',127),
  ('cond2Aux1 -> cond2Aux2 SINO LLAVE_IZQ expresion LLAVE_DER','cond2Aux1',5,'p_cond2Aux1','SintacticAnalizer.py',135),
  ('cond2Aux1 -> empty empty empty empty empty','cond2Aux1',5,'p_cond2Aux1','SintacticAnalizer.py',136),
  ('cond2Aux2 -> CUANDO condicion sentencia ENTONS LLAVE_IZQ expresion LLAVE_DER cond2Aux2','cond2Aux2',8,'p_cond2Aux2','SintacticAnalizer.py',146),
  ('cond2Aux2 -> empty empty empty empty empty empty empty empty','cond2Aux2',8,'p_cond2Aux2','SintacticAnalizer.py',147),
  ('condicion -> IGUAL','condicion',1,'p_condicion','SintacticAnalizer.py',159),
  ('condicion -> MAYOR','condicion',1,'p_condicion','SintacticAnalizer.py',160),
  ('condicion -> MENOR','condicion',1,'p_condicion','SintacticAnalizer.py',161),
  ('condicion -> DIFERENTE','condicion',1,'p_condicion','SintacticAnalizer.py',162),
  ('condicion -> MAYORIGUAL','condicion',1,'p_condicion','SintacticAnalizer.py',163),
  ('condicion -> MENORIGUAL','condicion',1,'p_condicion','SintacticAnalizer.py',164),
  ('sentencia -> ID','sentencia',1,'p_sentencia','SintacticAnalizer.py',172),
  ('sentencia -> NUMERO','sentencia',1,'p_sentencia','SintacticAnalizer.py',173),
  ('repita -> REPITA LLAVE_IZQ expresion LLAVE_DER HASTAENCONTRAR ID condicion sentencia PUNTOCOMA','repita',9,'p_repita','SintacticAnalizer.py',180),
  ('hacer -> DESDE ID IGUAL sentencia HASTA sentencia HAGA LLAVE_IZQ expresion LLAVE_DER FINDESDE PUNTOCOMA','hacer',12,'p_hacer','SintacticAnalizer.py',189),
  ('funcion -> Aleatorio','funcion',1,'p_funcion','SintacticAnalizer.py',198),
  ('funcion -> Mover','funcion',1,'p_funcion','SintacticAnalizer.py',199),
  ('funcion -> funcionAlge','funcion',1,'p_funcion','SintacticAnalizer.py',200),
  ('Aleatorio -> ALEATORIO PARENTESIS_IZQ PARENTESIS_DER PUNTOCOMA','Aleatorio',4,'p_aleatorio','SintacticAnalizer.py',207),
  ('Mover -> MOVER PARENTESIS_IZQ paramMover PARENTESIS_DER PUNTOCOMA','Mover',5,'p_mover','SintacticAnalizer.py',216),
  ('paramMover -> AF','paramMover',1,'p_ParamMover','SintacticAnalizer.py',225),
  ('paramMover -> F','paramMover',1,'p_ParamMover','SintacticAnalizer.py',226),
  ('paramMover -> DFA','paramMover',1,'p_ParamMover','SintacticAnalizer.py',227),
  ('paramMover -> IFA','paramMover',1,'p_ParamMover','SintacticAnalizer.py',228),
  ('paramMover -> DFB','paramMover',1,'p_ParamMover','SintacticAnalizer.py',229),
  ('paramMover -> IFB','paramMover',1,'p_ParamMover','SintacticAnalizer.py',230),
  ('paramMover -> A','paramMover',1,'p_ParamMover','SintacticAnalizer.py',231),
  ('paramMover -> DAA','paramMover',1,'p_ParamMover','SintacticAnalizer.py',232),
  ('paramMover -> IAA','paramMover',1,'p_ParamMover','SintacticAnalizer.py',233),
  ('paramMover -> DAB','paramMover',1,'p_ParamMover','SintacticAnalizer.py',234),
  ('paramMover -> IAB','paramMover',1,'p_ParamMover','SintacticAnalizer.py',235),
  ('paramMover -> AA','paramMover',1,'p_ParamMover','SintacticAnalizer.py',236),
  ('funcionAlge -> INC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA','funcionAlge',7,'p_funcion_Alge','SintacticAnalizer.py',243),
  ('funcionAlge -> DEC PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA','funcionAlge',7,'p_funcion_Alge','SintacticAnalizer.py',244),
  ('funcionAlge -> INI PARENTESIS_IZQ ID COMA sentencia PARENTESIS_DER PUNTOCOMA','funcionAlge',7,'p_funcion_Alge','SintacticAnalizer.py',245),
  ('procedimiento -> PROC ID PARENTESIS_IZQ parametro PARENTESIS_DER INICIOPROC DOSPUNTOS expresion FINPROC PUNTOCOMA procedimiento','procedimiento',11,'p_procedimiento','SintacticAnalizer.py',255),
  ('procedimiento -> empty empty empty empty empty empty empty empty empty empty empty','procedimiento',11,'p_procedimiento','SintacticAnalizer.py',256),
  ('parametro -> ID COMA parametro','parametro',3,'p_parametro','SintacticAnalizer.py',268),
  ('parametro -> ID empty empty','parametro',3,'p_parametro','SintacticAnalizer.py',269),
  ('parametro -> NUMERO COMA parametro','parametro',3,'p_parametro','SintacticAnalizer.py',270),
  ('parametro -> NUMERO empty empty','parametro',3,'p_parametro','SintacticAnalizer.py',271),
  ('parametro -> empty empty empty','parametro',3,'p_parametro','SintacticAnalizer.py',272),
  ('llamarProc -> LLAMAR ID PARENTESIS_IZQ parametro PARENTESIS_DER PUNTOCOMA','llamarProc',6,'p_llamarProc','SintacticAnalizer.py',282),
  ('empty -> <empty>','empty',0,'p_empty','SintacticAnalizer.py',289),
]
